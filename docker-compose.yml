
services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  client-gateway:
    build: ./client-gateway
    ports:
      # Expone para el Gateway un puerto distinto encapsulado en una variable de entorno
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222

  products-ms:
    build: ./products-ms
    ports:
      - "3001:3001"
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    ports:
      - "3002:3002"
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=postgresql://${CLIENT_ORDERS_POSTGRES_USERNAME}:${CLIENT_ORDERS_POSTGRES_PASSWORD}@orders-db:5432/${CLIENT_ORDERS_POSTGRES_DBNAME}?schema=public

  orders-db:
    container_name: orders-database
    image: postgres:17.4
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=${CLIENT_ORDERS_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${CLIENT_ORDERS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${CLIENT_ORDERS_POSTGRES_DBNAME}

  payments-ms:
    build: ./payments-ms
    ports:
      - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - FRONTEND_URL=${STRIPE_FRONTEND_URL}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}